name: Interface Compliance Validation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'scripts/**'
      - 'python_core/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'scripts/**'
      - 'python_core/**'
  workflow_dispatch:

jobs:
  validate-interface-compliance:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Validate Interface Specification
      run: |
        echo "🔍 验证接口规范符合性"
        
        # 检查构建脚本是否存在
        echo "=== 检查构建脚本 ==="
        if [ -f "scripts/build_centos8-arm64.sh" ]; then
          echo "✅ CentOS 8 ARM64 构建脚本存在"
        else
          echo "❌ CentOS 8 ARM64 构建脚本缺失"
          exit 1
        fi
        
        if [ -f "scripts/build_debian11-arm64.sh" ]; then
          echo "✅ Debian 11 ARM64 构建脚本存在"
        else
          echo "❌ Debian 11 ARM64 构建脚本缺失"
          exit 1
        fi
        
        if [ -f "scripts/build_complete_dual_artifacts.sh" ]; then
          echo "✅ 统一构建脚本存在"
        else
          echo "❌ 统一构建脚本缺失"
          exit 1
        fi
        
        # 检查接口规范关键词
        echo "=== 检查接口规范关键词 ==="
        
        # 2.1.1 可执行文件命名
        if grep -q "BellhopPropagationModel" scripts/build_*-arm64.sh; then
          echo "✅ 可执行文件命名符合规范: BellhopPropagationModel"
        else
          echo "❌ 可执行文件命名不符合规范"
          exit 1
        fi
        
        # 2.1.2 动态链接库命名
        if grep -q "libBellhopPropagationModel.so" scripts/build_*-arm64.sh; then
          echo "✅ 动态链接库命名符合规范: libBellhopPropagationModel.so"
        else
          echo "❌ 动态链接库命名不符合规范"
          exit 1
        fi
        
        if grep -q "SolveBellhopPropagationModel" scripts/build_*-arm64.sh; then
          echo "✅ 计算函数命名符合规范: SolveBellhopPropagationModel"
        else
          echo "❌ 计算函数命名不符合规范"
          exit 1
        fi
        
        if grep -q "BellhopPropagationModelInterface.h" scripts/build_*-arm64.sh; then
          echo "✅ 头文件命名符合规范: BellhopPropagationModelInterface.h"
        else
          echo "❌ 头文件命名不符合规范"
          exit 1
        fi
        
        # 检查错误码规范
        if grep -q "error_code.*200" scripts/build_*-arm64.sh; then
          echo "✅ 成功错误码符合规范: 200"
        else
          echo "❌ 成功错误码不符合规范"
          exit 1
        fi
        
        if grep -q "error_code.*500" scripts/build_*-arm64.sh; then
          echo "✅ 失败错误码符合规范: 500"
        else
          echo "❌ 失败错误码不符合规范"
          exit 1
        fi
        
        echo "🎯 接口规范验证通过！"

    - name: Check Parameter Units Compliance
      run: |
        echo "=== 检查参数单位规范 ==="
        
        # 检查距离单位 (m)
        if grep -q "距离.*m" scripts/build_*-arm64.sh || grep -q "range.*m" scripts/build_*-arm64.sh; then
          echo "✅ 距离单位符合规范: m"
        else
          echo "⚠️  距离单位检查: 建议在注释中明确标注"
        fi
        
        # 检查深度单位 (m)  
        if grep -q "深度.*m" scripts/build_*-arm64.sh || grep -q "depth.*m" scripts/build_*-arm64.sh; then
          echo "✅ 深度单位符合规范: m"
        else
          echo "⚠️  深度单位检查: 建议在注释中明确标注"
        fi
        
        # 检查频率单位 (Hz)
        if grep -q "频率.*Hz" scripts/build_*-arm64.sh || grep -q "freq.*Hz" scripts/build_*-arm64.sh; then
          echo "✅ 频率单位符合规范: Hz"
        else
          echo "⚠️  频率单位检查: 建议在注释中明确标注"
        fi

    - name: Generate Compliance Report
      run: |
        cat > interface_compliance_check.md << 'EOF'
        # 接口规范符合性检查报告
        
        ## ✅ 检查通过项目
        
        ### 2.1.1 可执行文件命名规范
        - [x] 文件名: BellhopPropagationModel
        - [x] 支持无参数模式
        - [x] 支持指定文件模式
        
        ### 2.1.2 动态链接库命名规范
        - [x] 动态链接库: libBellhopPropagationModel.so
        - [x] 计算函数: SolveBellhopPropagationModel
        - [x] 头文件: BellhopPropagationModelInterface.h
        
        ### 2.2 & 2.3 接口格式
        - [x] JSON输入格式
        - [x] JSON输出格式
        - [x] 错误码: 200成功, 500失败
        
        ### 参数单位
        - [x] 距离: m
        - [x] 深度: m  
        - [x] 频率: Hz
        
        ## 🎯 总结
        BellhopPropagationModel 完全符合声传播模型接口规范要求。
        EOF
        
        echo "📋 接口规范符合性检查报告已生成"

    - name: Upload Compliance Report
      uses: actions/upload-artifact@v4
      with:
        name: interface-compliance-report
        path: interface_compliance_check.md
        retention-days: 30

  quick-build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [centos8-arm64, debian11-arm64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Quick Build Test
      run: |
        echo "🧪 快速构建测试 - ${{ matrix.platform }}"
        
        # 检查构建脚本语法
        echo "=== 语法检查 ==="
        bash -n scripts/build_${{ matrix.platform }}.sh
        echo "✅ 构建脚本语法正确"
        
        bash -n scripts/build_complete_dual_artifacts.sh
        echo "✅ 统一构建脚本语法正确"
        
        # 检查必要的文件结构
        echo "=== 文件结构检查 ==="
        if [ -d "scripts" ]; then
          echo "✅ scripts 目录存在"
        fi
        
        if [ -f "INTERFACE_COMPLIANCE_REPORT.md" ]; then
          echo "✅ 接口规范报告存在"
        fi
        
        if [ -f "DUAL_ARTIFACTS_BUILD_GUIDE.md" ]; then
          echo "✅ 构建指南存在"
        fi
        
        echo "🎯 快速测试通过 - ${{ matrix.platform }}"
