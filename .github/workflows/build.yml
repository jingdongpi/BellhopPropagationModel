name: Build and Test

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
        python-version: [3.9, '3.10', '3.11', '3.12']
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          gcc \
          g++ \
          make \
          python3-dev \
          python3-pip \
          libpython3-dev \
          pkg-config
          
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          pip install numpy scipy
        fi
        
    - name: Display system info
      run: |
        echo "=== System Information ==="
        uname -a
        echo "=== Python Information ==="
        python --version
        python -c "import sys; print(f'Python executable: {sys.executable}')"
        python -c "import numpy; print(f'NumPy version: {numpy.__version__}')"
        python -c "import scipy; print(f'SciPy version: {scipy.__version__}')"
        echo "=== CMake Information ==="
        cmake --version
        echo "=== GCC Information ==="
        gcc --version
        
    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake .. \
          -DBUILD_EXECUTABLE=ON \
          -DBUILD_SHARED_LIBS=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_VERBOSE_MAKEFILE=ON
          
    - name: Build project
      run: |
        cd build
        make -j$(nproc)
        
    - name: Verify build outputs
      run: |
        echo "=== Checking build outputs ==="
        ls -la bin/ || echo "bin/ directory not found"
        ls -la lib/ || echo "lib/ directory not found"
        
        if [ -f "bin/BellhopPropagationModel" ]; then
          echo "✓ Executable found: bin/BellhopPropagationModel"
          file bin/BellhopPropagationModel
        else
          echo "✗ Executable not found"
          exit 1
        fi
        
        if [ -f "lib/libBellhopPropagationModel.so" ]; then
          echo "✓ Library found: lib/libBellhopPropagationModel.so"
          file lib/libBellhopPropagationModel.so
          ldd lib/libBellhopPropagationModel.so || echo "Could not check library dependencies"
        else
          echo "✗ Library not found"
          exit 1
        fi
        
    - name: Test executable
      run: |
        if [ -f "bin/BellhopPropagationModel" ]; then
          echo "=== Testing executable ==="
          ./bin/BellhopPropagationModel --help || echo "Help option not available"
          ./bin/BellhopPropagationModel --version || echo "Version option not available"
        fi
        
    - name: Run CI tests
      run: |
        chmod +x ci_test.sh
        ./ci_test.sh
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: bellhop-build-${{ matrix.os }}-python${{ matrix.python-version }}
        path: |
          bin/BellhopPropagationModel
          lib/libBellhopPropagationModel.so
          include/
        retention-days: 7
        
    - name: Upload build logs on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-logs-${{ matrix.os }}-python${{ matrix.python-version }}
        path: |
          build/CMakeFiles/CMakeOutput.log
          build/CMakeFiles/CMakeError.log
          build/**/*.log
        retention-days: 3
